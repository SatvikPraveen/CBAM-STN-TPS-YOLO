# VALIDATION: Run `python src/utils/config_validator.py` before training
# This validates parameter counts, dependency versions, and configuration consistency
# config/model_configs.yaml
# Enhanced Model Architecture Configurations for CBAM-STN-TPS-YOLO
# Authors: Satvik Praveen, Yoonsung Jung
# Institution: Texas A&M University
# Version: 2.0.0

# =============================================================================
# MODEL REGISTRY
# =============================================================================
model_registry:
  available_models:
    - "CBAM-STN-TPS-YOLO" # Complete proposed model
    - "CBAM-STN-YOLO" # Without TPS
    - "STN-TPS-YOLO" # Without CBAM
    - "STN-YOLO" # Affine transformation only
    - "YOLO" # Baseline

  default_model: "CBAM-STN-TPS-YOLO"

  # Model complexity hierarchy (parameters in millions)
  complexity:
    YOLO: 25.2
    STN-YOLO: 27.8
    STN-TPS-YOLO: 29.5
    CBAM-STN-YOLO: 28.9
    CBAM-STN-TPS-YOLO: 31.4

# =============================================================================
# COMPLETE PROPOSED MODEL
# =============================================================================
CBAM-STN-TPS-YOLO:
  description: "Complete model with CBAM attention and TPS spatial transformation"
  paper_reference: "Proposed architecture combining all components"

  # Global configuration
  global_config:
    input_channels: 4
    num_classes: 3
    input_size: 640
    backbone_type: "darknet53"
    use_pretrained: true

  # Backbone configuration
  backbone:
    name: "enhanced_darknet53"
    pretrained: true
    pretrained_path: null
    freeze_early_layers: false

    # Architecture details
    channels: [32, 64, 128, 256, 512, 1024]
    strides: [1, 2, 2, 2, 2, 2]
    kernel_sizes: [3, 3, 3, 3, 3, 3]

    # Normalization and activation
    normalization: "batch_norm"
    activation: "leaky_relu"
    leaky_slope: 0.1

    # Residual connections
    use_residual: true
    residual_blocks: [1, 2, 8, 8, 4]

    # Multi-spectral adaptation
    multi_spectral:
      enabled: true
      input_adaptation: "conv1x1" # How to handle 4-channel input
      band_fusion: "early" # early, middle, late

  # STN-TPS Configuration
  stn:
    enabled: true

    # TPS parameters
    tps:
      num_control_points: 20
      reg_lambda: 0.01
      normalize_control_points: true
      control_point_init: "grid" # grid, random, learned

      # TPS solver configuration
      solver:
        method: "svd" # svd, lstsq
        regularization: "ridge"
        eps: 1e-6

    # Localization network
    localization:
      input_size: 28 # Feature map size for localization
      channels: [8, 10, 16]
      kernel_sizes: [7, 5, 3]
      strides: [1, 1, 1]

      # Fully connected layers
      fc_layers:
        hidden_dims: [32, 64]
        dropout: 0.1
        activation: "relu"

      # Output layer
      output_dim: 40 # 2 * num_control_points for TPS
      output_activation: "tanh"
      output_scale: 0.1

    # Training configuration
    training:
      loss_weight: 0.05
      gradient_clipping: 1.0
      learning_rate_multiplier: 1.0

      # Regularization
      regularization:
        smoothness_weight: 0.01
        control_point_spread: 0.001

  # CBAM Attention Configuration
  cbam:
    enabled: true

    # Channel attention
    channel_attention:
      reduction_ratio: 16
      pool_types: ["avg", "max"]
      gate_channels: null # Auto-computed
      activation: "relu"
      use_mlp: true
      mlp_layers: [null, null] # [input_dim/reduction_ratio, input_dim]

    # Spatial attention
    spatial_attention:
      kernel_size: 7
      dilation: 1
      padding: 3
      activation: "sigmoid"
      pool_types: ["avg", "max"]

    # Integration strategy
    integration:
      order: "channel_first" # channel_first, spatial_first, parallel
      fusion_method: "multiply" # multiply, add, concat
      residual_connection: true

    # Placement in network
    placement:
      backbone_layers: [2, 3, 4] # Which layers to add CBAM
      feature_pyramid: true # Add to FPN
      detection_head: false # Add to detection heads

    # Training configuration
    training:
      attention_loss_weight: 0.1
      attention_dropout: 0.0
      freeze_attention: false

  # Feature Pyramid Network
  fpn:
    enabled: true

    # FPN configuration
    config:
      in_channels: [256, 512, 1024]
      out_channels: 256
      num_outs: 3
      start_level: 0
      end_level: -1
      add_extra_convs: false

    # Enhancement modules
    enhancements:
      use_cbam: true
      use_carafe: false # Content-Aware ReAssembly of FEatures
      use_pafpn: false # Path Aggregation FPN

  # Detection Head Configuration
  detection_head:
    type: "yolo_head"

    # Multi-scale detection
    scales:
      - name: "small"
        feature_level: 0
        anchor_sizes: [[10, 13], [16, 30], [33, 23]]
        stride: 8

      - name: "medium"
        feature_level: 1
        anchor_sizes: [[30, 61], [62, 45], [59, 119]]
        stride: 16

      - name: "large"
        feature_level: 2
        anchor_sizes: [[116, 90], [156, 198], [373, 326]]
        stride: 32

    # Head architecture
    architecture:
      num_convs: 2
      conv_channels: 256
      conv_kernel_size: 3
      conv_activation: "leaky_relu"

      # Output layers
      cls_out_channels: 3 # num_classes
      reg_out_channels: 4 # bbox regression
      obj_out_channels: 1 # objectness

      # Normalization
      use_norm: true
      norm_type: "batch_norm"

    # Loss configuration
    loss:
      cls_loss_type: "focal_loss"
      reg_loss_type: "ciou_loss"
      obj_loss_type: "bce_loss"

      # Loss weights
      cls_weight: 1.0
      reg_weight: 5.0
      obj_weight: 1.0

      # Focal loss parameters
      focal_alpha: 0.25
      focal_gamma: 2.0

  # Training specific configurations
  training:
    # Initialization
    initialization:
      backbone: "pretrained" # pretrained, xavier, kaiming, normal
      attention: "xavier"
      stn: "identity" # identity, xavier, small_random
      detection: "normal"

    # Learning rates for different components
    learning_rates:
      backbone: 0.0001
      attention: 0.001
      stn: 0.001
      detection: 0.001

    # Freezing schedule
    freezing:
      backbone_epochs: 0 # Freeze backbone for N epochs
      attention_epochs: 0 # Freeze attention for N epochs
      gradual_unfreeze: false # Gradually unfreeze layers

    # Multi-spectral band specifications
    # Note: PGP dataset uses non-standard bands optimized for greenhouse conditions
    # Standard agricultural remote sensing typically uses:
    # - Red: 680nm (chlorophyll absorption)
    # - NIR: 800nm (vegetation reflectance)
    # PGP bands are optimized for controlled greenhouse phenotyping:
    multi_spectral:
      enabled: true
      input_adaptation: "conv1x1" # How to handle 4-channel input
      band_fusion: "early" # early, middle, late

      # PGP-specific bands (greenhouse optimized)
      bands_nm:
        green: 580 # Chlorophyll reflectance
        red: 660 # Structural features
        red_edge: 730 # Early stress detection
        nir: 820 # Biomass assessment

      # Conversion to standard agricultural bands if needed
      standard_conversion:
        enabled: false
        target_bands: [680, 800] # Standard red, NIR

# =============================================================================
# ABLATION STUDY VARIANTS
# =============================================================================

# Model without CBAM attention
STN-TPS-YOLO:
  description: "STN with TPS but without CBAM attention"
  base_model: "CBAM-STN-TPS-YOLO"

  modifications:
    cbam:
      enabled: false

    # Compensate for removed attention with deeper backbone
    backbone:
      channels: [32, 64, 128, 256, 512, 1024, 1024]
      residual_blocks: [1, 2, 8, 8, 4, 2]

# Model without TPS (affine transformation only)
CBAM-STN-YOLO:
  description: "CBAM attention with affine STN (no TPS)"
  base_model: "CBAM-STN-TPS-YOLO"

  modifications:
    stn:
      tps:
        enabled: false

      # Use affine transformation instead
      affine:
        enabled: true
        output_dim: 6 # 2x3 affine matrix
        constraint_type: "similarity" # similarity, affine, none

# Model with only affine STN
STN-YOLO:
  description: "STN with affine transformation only"
  base_model: "CBAM-STN-TPS-YOLO"

  modifications:
    cbam:
      enabled: false

    stn:
      tps:
        enabled: false
      affine:
        enabled: true
        output_dim: 6
        constraint_type: "affine"

# Baseline YOLO model
YOLO:
  description: "Baseline YOLO without STN or CBAM"
  base_model: "CBAM-STN-TPS-YOLO"

  modifications:
    cbam:
      enabled: false

    stn:
      enabled: false

    # Standard backbone without enhancements
    backbone:
      name: "standard_darknet53"
      channels: [32, 64, 128, 256, 512]
      residual_blocks: [1, 2, 8, 8, 4]

# =============================================================================
# HYPERPARAMETER VARIATIONS FOR ABLATION
# =============================================================================

# TPS Control Point Variations
TPS_VARIATIONS:
  low_control_points:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      stn:
        tps:
          num_control_points: 10
          reg_lambda: 0.01

  high_control_points:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      stn:
        tps:
          num_control_points: 30
          reg_lambda: 0.01

  low_regularization:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      stn:
        tps:
          num_control_points: 20
          reg_lambda: 0.001

  high_regularization:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      stn:
        tps:
          num_control_points: 20
          reg_lambda: 0.1

# CBAM Attention Variations
CBAM_VARIATIONS:
  low_reduction:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      cbam:
        channel_attention:
          reduction_ratio: 8

  high_reduction:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      cbam:
        channel_attention:
          reduction_ratio: 32

  small_spatial_kernel:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      cbam:
        spatial_attention:
          kernel_size: 3

  large_spatial_kernel:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      cbam:
        spatial_attention:
          kernel_size: 11

  channel_only:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      cbam:
        spatial_attention:
          enabled: false

  spatial_only:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      cbam:
        channel_attention:
          enabled: false

# =============================================================================
# BACKBONE VARIATIONS
# =============================================================================
BACKBONE_VARIATIONS:
  resnet50:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      backbone:
        name: "resnet50"
        pretrained: true
        output_channels: [256, 512, 1024, 2048]

  efficientnet_b3:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      backbone:
        name: "efficientnet_b3"
        pretrained: true
        compound_scaling: true

  mobilenet_v3:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      backbone:
        name: "mobilenet_v3_large"
        pretrained: true
        lightweight: true

# =============================================================================
# INPUT SIZE VARIATIONS
# =============================================================================
INPUT_SIZE_VARIATIONS:
  small:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      global_config:
        input_size: 416
      stn:
        localization:
          input_size: 20

  medium:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      global_config:
        input_size: 512
      stn:
        localization:
          input_size: 24

  large:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      global_config:
        input_size: 768
      stn:
        localization:
          input_size: 36

# =============================================================================
# MULTI-SPECTRAL VARIATIONS
# =============================================================================
SPECTRAL_VARIATIONS:
  rgb_only:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      global_config:
        input_channels: 3
      backbone:
        multi_spectral:
          enabled: false

  five_band:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      global_config:
        input_channels: 5 # RGB + NIR + Red Edge
      backbone:
        multi_spectral:
          enabled: true
          bands: ["red", "green", "blue", "nir", "red_edge"]

  nir_only:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      global_config:
        input_channels: 1
      backbone:
        multi_spectral:
          enabled: true
          bands: ["nir"]

# =============================================================================
# LOSS FUNCTION VARIATIONS
# =============================================================================
LOSS_VARIATIONS:
  focal_emphasis:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      detection_head:
        loss:
          cls_weight: 2.0
          focal_gamma: 3.0

  regression_emphasis:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      detection_head:
        loss:
          reg_weight: 10.0
          reg_loss_type: "diou_loss"

  balanced_loss:
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      detection_head:
        loss:
          cls_weight: 1.0
          reg_weight: 1.0
          obj_weight: 1.0

# =============================================================================
# OPTIMIZATION CONFIGURATIONS
# =============================================================================
OPTIMIZATION_CONFIGS:
  fast_convergence:
    description: "Configuration for fast convergence"
    modifications:
      training:
        learning_rates:
          backbone: 0.001
          attention: 0.01
          stn: 0.01
          detection: 0.01

      # Aggressive augmentation
      augmentation_strength: "high"

  stable_training:
    description: "Configuration for stable training"
    modifications:
      training:
        learning_rates:
          backbone: 0.0001
          attention: 0.0005
          stn: 0.0005
          detection: 0.0005

      # Conservative augmentation
      augmentation_strength: "low"

      # Additional regularization
      dropout: 0.1
      weight_decay: 0.01

# =============================================================================
# DEPLOYMENT OPTIMIZED MODELS
# =============================================================================
DEPLOYMENT_VARIANTS:
  mobile_optimized:
    description: "Optimized for mobile deployment"
    base_model: "CBAM-STN-TPS-YOLO"
    modifications:
      backbone:
        name: "mobilenet_v3_small"
        width_multiplier: 0.75

      cbam:
        channel_attention:
          reduction_ratio: 32 # Reduce computation

      stn:
        tps:
          num_control_points: 10 # Reduce complexity

      detection_head:
        architecture:
          num_convs: 1
          conv_channels: 128

  edge_optimized:
    description: "Optimized for edge devices"
    base_model: "STN-YOLO" # Simpler variant
    modifications:
      backbone:
        channels: [16, 32, 64, 128, 256]

      detection_head:
        architecture:
          conv_channels: 128

      # Quantization friendly
      quantization_aware: true

# =============================================================================
# MODEL VALIDATION SCHEMA
# =============================================================================
validation_schema:
  required_components:
    - "backbone"
    - "detection_head"
    - "global_config"

  optional_components:
    - "stn"
    - "cbam"
    - "fpn"

  component_constraints:
    backbone:
      required_fields: ["name", "channels"]
      valid_names: ["darknet53", "resnet50", "efficientnet_b3", "mobilenet_v3"]

    stn:
      required_fields: ["localization"]
      constraints:
        tps:
          num_control_points:
            min: 4
            max: 50
        localization:
          input_size:
            min: 7
            max: 56

    cbam:
      constraints:
        channel_attention:
          reduction_ratio:
            allowed: [4, 8, 16, 32, 64]
        spatial_attention:
          kernel_size:
            allowed: [3, 5, 7, 9, 11]

    global_config:
      required_fields: ["input_channels", "num_classes", "input_size"]
      constraints:
        input_channels:
          min: 1
          max: 10
        num_classes:
          min: 1
          max: 1000
        input_size:
          allowed: [224, 256, 320, 384, 416, 512, 608, 640, 768, 832]

# =============================================================================
# PERFORMANCE BENCHMARKS
# =============================================================================
performance_benchmarks:
  # Expected performance ranges for different model variants
  expected_performance:
    YOLO:
      mAP: [0.75, 0.82]
      fps: [45, 60]
      params_M: [25, 30]

    STN-YOLO:
      mAP: [0.78, 0.85]
      fps: [40, 55]
      params_M: [27, 32]

    STN-TPS-YOLO:
      mAP: [0.81, 0.88]
      fps: [35, 50]
      params_M: [29, 34]

    CBAM-STN-YOLO:
      mAP: [0.82, 0.89]
      fps: [38, 53]
      params_M: [28, 33]

    CBAM-STN-TPS-YOLO:
      mAP: [0.85, 0.92]
      fps: [32, 47]
      params_M: [31, 36]

  # Computational requirements
  computational_requirements:
    min_gpu_memory_gb: 8
    recommended_gpu_memory_gb: 16
    min_cpu_cores: 4
    recommended_cpu_cores: 8

# =============================================================================
# PARAMETER COUNT VALIDATION
# =============================================================================
parameter_validation:
  method: "pytorch_summary"
  verify_complexity_table: true

  # Expected parameter counts (in millions)
  target_parameters:
    YOLO: 25.2
    STN-YOLO: 27.8
    STN-TPS-YOLO: 29.5
    CBAM-STN-YOLO: 28.9
    CBAM-STN-TPS-YOLO: 31.4

  # Tolerance for parameter count validation (±5%)
  tolerance_percent: 5.0

  # Components contributing to parameter count
  component_breakdown:
    backbone_darknet53: 21.5 # Base YOLO backbone
    stn_localization: 0.8 # STN localization network
    tps_transformation: 1.2 # TPS weights and control points
    cbam_attention: 0.6 # Channel + spatial attention
    detection_heads: 4.8 # Multi-scale detection heads
    fpn_layers: 2.5 # Feature Pyramid Network
